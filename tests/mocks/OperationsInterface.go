// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	queries "tiagofv.com/transactions/infra/database/queries"
)

// OperationsInterface is an autogenerated mock type for the OperationsInterface type
type OperationsInterface struct {
	mock.Mock
}

// GetOperation provides a mock function with given fields: id
func (_m *OperationsInterface) GetOperation(id int64) (queries.OperationType, error) {
	ret := _m.Called(id)

	var r0 queries.OperationType
	if rf, ok := ret.Get(0).(func(int64) queries.OperationType); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(queries.OperationType)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int64) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewOperationsInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewOperationsInterface creates a new instance of OperationsInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewOperationsInterface(t mockConstructorTestingTNewOperationsInterface) *OperationsInterface {
	mock := &OperationsInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
