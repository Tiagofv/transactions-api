// Code generated by mockery v2.13.1. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	dto "tiagofv.com/transactions/core/domain/dto"

	queries "tiagofv.com/transactions/infra/database/queries"
)

// TransactionsInterface is an autogenerated mock type for the TransactionsInterface type
type TransactionsInterface struct {
	mock.Mock
}

// CreateTransaction provides a mock function with given fields: transaction
func (_m *TransactionsInterface) CreateTransaction(transaction dto.TransactionDto) (queries.Transaction, error) {
	ret := _m.Called(transaction)

	var r0 queries.Transaction
	if rf, ok := ret.Get(0).(func(dto.TransactionDto) queries.Transaction); ok {
		r0 = rf(transaction)
	} else {
		r0 = ret.Get(0).(queries.Transaction)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(dto.TransactionDto) error); ok {
		r1 = rf(transaction)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewTransactionsInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewTransactionsInterface creates a new instance of TransactionsInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTransactionsInterface(t mockConstructorTestingTNewTransactionsInterface) *TransactionsInterface {
	mock := &TransactionsInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
